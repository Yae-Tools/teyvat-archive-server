name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/teyvat-archive-server
            git pull origin master
          EOF

      - name: Updating ENV
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/teyvat-archive-server
            cat > .env << 'INNER_EOF'
          PROJECT_AMBR_BASE_URL=${{ secrets.PROJECT_AMBR_BASE_URL }}
          HOYOPLAY_REQUEST_CAPTURE_URL=${{ secrets.HOYOPLAY_REQUEST_CAPTURE_URL }}
          HOYO_GAME_CAPTURE_URL=${{ secrets.HOYO_GAME_CAPTURE_URL }}
          HOYO_API=${{ secrets.HOYO_API }}
          AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}
          AZA_GG_API=${{ secrets.AZA_GG_API }}
          HAKUSH_ABYSS_API=${{ secrets.HAKUSH_ABYSS_API }}
          PORT=${{ secrets.PORT }}
          INNER_EOF
            echo "Updated .env file with secrets."
          EOF

      - name: Building Docker
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/teyvat-archive-server
            docker-compose down
            docker-compose up -d --build
            docker system prune -f
          EOF

      - name: Deployment Success
        run: echo "Deployment to EC2 successful!"

      - name: Clean up
        run: |
          rm -rf ~/.ssh/id_ed25519
          rm -rf ~/.ssh/known_hosts
          echo "Cleaned up SSH keys."
